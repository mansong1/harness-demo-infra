name: api
replicas: 1

image: ${artifact.metadata.image}
dockercfg: ${artifact.source.dockerconfig}

createNamespace: false
namespace: ${infra.kubernetes.namespace}

# Service Type allow you to specify what kind of service you want.
# Possible values for ServiceType are:
# ClusterIP | NodePort | LoadBalancer | ExternalName
serviceType: LoadBalancer

# A Service can map an incoming port to any targetPort.
# targetPort is where application is listening on inside the container.
servicePort: 3000
serviceTargetPort: 3000

# Specify all environment variables to be added to the container.
# The following two maps, config and secrets, are put into a ConfigMap
# and a Secret, respectively.
# Both are added to the container environment in podSpec as envFrom source.
env:
  config:
    SERVER_HOST: ${context.tfserver.TF_APP_HOST}
    SERVER_PORT: ${context.tfserver.TF_APP_GRPC_PORT}




export API_HOST=$(kubectl get svc --namespace ${infra.kubernetes.namespace} api-svc --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}") 

export API_PORT=$(kubectl get svc --namespace ${infra.kubernetes.namespace} api-svc -o jsonpath="{.spec.ports[1].port}")